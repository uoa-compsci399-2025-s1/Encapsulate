name: CD Pipeline

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Manual deployment environment'
        type: environment
        required: true

jobs:
  deploy-to-staging:
    concurrency:
      group: deploy-staging
      cancel-in-progress: true
    name: Deploy Encapsulate to Staging
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'staging')
    env:
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      # Repository secrets
      DATABASE_URI: ${{ secrets.DATABASE_URI }}
      PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    environment:
      name: staging
      # Note this url will change whenever our IP gets discarded, need to get our domain first.
      url: http://ec2-54-66-250-19.ap-southeast-2.compute.amazonaws.com:3000
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Upload repo to EC2
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --delete --exclude '.git' --exclude 'node_modules' --exclude '.next' --exclude '.pnpm-store'
          path: ./
          remote_path: ~/app
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ${{ secrets.EC2_USERNAME }}
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - name: Connect to Server via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd ~/app

            echo "storing secrets"
            echo "DATABASE_URI=${{ secrets.DATABASE_URI }}" >> .env
            echo "PAYLOAD_SECRET=${{ secrets.PAYLOAD_SECRET }}" >> .env
            echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
            echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
            echo "NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}" >> .env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> .env

            echo "Stopping old containers"
            docker-compose down

            echo "Removing old images"
            docker system prune -f

            echo "Rebuilding and starting containers"
            docker-compose up -d --build

  deploy-to-production:
    concurrency:
      group: deploy-production
      cancel-in-progress: true
    name: Deploy Encapsulate to Production
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    env:
      EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
      EC2_HOST: ${{ secrets.EC2_HOST }}
      EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
      # Repository secrets
      DATABASE_URI: ${{ secrets.DATABASE_URI }}
      PAYLOAD_SECRET: ${{ secrets.PAYLOAD_SECRET }}
      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
      NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
    environment:
      name: production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Upload repo to EC2
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -avz --delete --exclude '.git' --exclude 'node_modules' --exclude '.next' --exclude '.pnpm-store'
          path: ./
          remote_path: ~/app
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ${{ secrets.EC2_USERNAME }}
          remote_key: ${{ secrets.EC2_SSH_KEY }}

      - run: echo "To be implemented"
      # To be implemented at a later stage
